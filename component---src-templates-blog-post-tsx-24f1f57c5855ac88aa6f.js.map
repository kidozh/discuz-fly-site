{"version":3,"file":"component---src-templates-blog-post-tsx-24f1f57c5855ac88aa6f.js","mappings":"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","sources":["webpack://discuz-fly-site/./src/components/SeoHead.tsx","webpack://discuz-fly-site/./src/templates/BlogPost.tsx"],"sourcesContent":["import * as React from 'react'\nimport { useStaticQuery, graphql } from 'gatsby'\n\ntype Props = {\n  title?: string\n  description?: string\n  lang?: string\n  pathname?: string\n}\n\nconst SeoHead: React.FC<Props> = ({ title, description = '', lang = 'en', pathname }) => {\n  const data = useStaticQuery(graphql`\n    query SiteMetaForHead {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  const siteTitle = data?.site?.siteMetadata?.title || ''\n  const siteUrl = process.env.SITE_URL || ''\n  const fullTitle = title ? `${title} | ${siteTitle}` : siteTitle\n  let url = ''\n  try {\n    if (pathname) {\n      if (siteUrl) {\n        url = new URL(pathname, siteUrl).href\n      } else {\n        // fallback to using pathname as-is when no siteUrl is configured\n        url = pathname\n      }\n    } else {\n      url = siteUrl || ''\n    }\n  } catch (e) {\n    url = pathname || siteUrl || ''\n  }\n\n  return (\n    <>\n      <html lang={lang} />\n      <title>{fullTitle}</title>\n      <meta name=\"description\" content={description} />\n      <meta property=\"og:title\" content={fullTitle} />\n      <meta property=\"og:description\" content={description} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta property=\"og:url\" content={url} />\n      <meta name=\"twitter:card\" content=\"summary\" />\n    </>\n  )\n}\n\nexport default SeoHead\n","import React from 'react'\nimport { graphql, Link } from 'gatsby'\nimport { useTranslation } from 'gatsby-plugin-react-i18next'\nimport LocalizedLink from '../components/LocalizedLink'\nconst enTranslations = require('../locales/en/translation.json')\nconst zhTranslations = require('../locales/zh/translation.json')\nimport Layout from '../components/Layout'\nimport SeoHead from '../components/SeoHead'\n\nconst BlogPost: React.FC<any> = ({ data, pageContext }) => {\n  const { t, i18n } = useTranslation()\n  const effectiveLang = pageContext?.i18n?.language || (i18n && i18n.language) || 'en'\n  const raw = { en: enTranslations, zh: zhTranslations }\n  const tFallback = (key: string, opts?: any) => {\n    const v = raw[effectiveLang as 'en' | 'zh'] && raw[effectiveLang as 'en' | 'zh'][key]\n    if (v && typeof v === 'string') {\n      if (opts) {\n        return Object.keys(opts).reduce((s, k) => s.replace(new RegExp(`{{\\\\s*${k}\\\\s*}}`, 'g'), String(opts[k])), v)\n      }\n      return v\n    }\n    return key\n  }\n  const translate = (key: string, opts?: any) => {\n    try {\n      if (i18n && i18n.language) {\n        const res = t(key, { lng: effectiveLang, ...(opts || {}) })\n        if (typeof res === 'string' && res !== key) return res\n      }\n    } catch (e) {}\n    return tFallback(key, opts)\n  }\n\n  const md = data && data.markdownRemark\n  const title = pageContext?.title || (md && md.frontmatter && md.frontmatter.title) || String(translate('blog.post_default_title') || 'Blog Post')\n  const html = pageContext?.html || (md && md.html) || ''\n  let date: string | null = null\n  const dateSource = pageContext?.date || (md && md.frontmatter && md.frontmatter.date)\n  if (dateSource) {\n    try {\n      const d = new Date(dateSource)\n      date = new Intl.DateTimeFormat(effectiveLang || 'en', { year: 'numeric', month: '2-digit', day: '2-digit' }).format(d)\n    } catch (e) { date = String(dateSource) }\n  }\n\n  return (\n    <Layout>\n      <SeoHead title={title} description={pageContext?.excerpt ? String(pageContext.excerpt) : undefined} />\n      <main className=\"max-w-4xl mx-auto py-12 px-4\">\n        <h1 className=\"text-3xl font-bold mb-4\">{title}</h1>\n        {date ? <div className=\"text-sm text-gray-500 mb-6\">{String(translate('blog.post_date_prefix') || '')} {date}</div> : null}\n        <article className=\"prose lg:prose-lg dark:prose-invert\" dangerouslySetInnerHTML={{ __html: html }} />\n\n        {/* Prev / Next navigation styled like modern blog cards */}\n        <div className=\"mt-12 border-t pt-8\">\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            {pageContext?.previous ? (\n              <Link to={pageContext.previous.path} className=\"group block p-5 rounded-lg border bg-white dark:bg-gray-900 hover:shadow-lg transition-shadow duration-200\">\n                <div className=\"flex items-start\">\n                  <div className=\"mr-4 text-3xl text-gray-400 group-hover:text-gray-600 dark:group-hover:text-gray-200\">◀</div>\n                  <div className=\"flex-1\">\n                    <div className=\"text-xs text-gray-500 mb-1\">{translate('blog.previous') || 'Previous'}</div>\n                    <div className=\"font-semibold text-lg text-theme dark:text-theme\">{pageContext.previous.title}</div>\n                    {pageContext.previous.date ? <div className=\"text-sm text-gray-400 mt-1\">{new Date(pageContext.previous.date).toLocaleDateString(effectiveLang)}</div> : null}\n                    {pageContext.previous.excerpt ? <div className=\"text-sm text-gray-600 dark:text-gray-300 mt-2 line-clamp-2\">{pageContext.previous.excerpt}</div> : null}\n                  </div>\n                </div>\n              </Link>\n            ) : (<div />)}\n\n            {pageContext?.next ? (\n              <Link to={pageContext.next.path} className=\"group block p-5 rounded-lg border bg-white dark:bg-gray-900 hover:shadow-lg transition-shadow duration-200\">\n                <div className=\"flex items-start justify-end text-right\">\n                  <div className=\"flex-1\">\n                    <div className=\"text-xs text-gray-500 mb-1\">{translate('blog.next') || 'Next'}</div>\n                    <div className=\"font-semibold text-lg text-theme dark:text-theme\">{pageContext.next.title}</div>\n                    {pageContext.next.date ? <div className=\"text-sm text-gray-400 mt-1\">{new Date(pageContext.next.date).toLocaleDateString(effectiveLang)}</div> : null}\n                    {pageContext.next.excerpt ? <div className=\"text-sm text-gray-600 dark:text-gray-300 mt-2 line-clamp-2\">{pageContext.next.excerpt}</div> : null}\n                  </div>\n                  <div className=\"ml-4 text-3xl text-gray-400 group-hover:text-gray-600 dark:group-hover:text-gray-200\">▶</div>\n                </div>\n              </Link>\n            ) : (<div />)}\n          </div>\n        </div>\n      </main>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query BlogPostById($id: String) {\n    markdownRemark(id: { eq: $id }) {\n      id\n      html\n      frontmatter {\n        title\n        date\n      }\n    }\n  }\n`\n\nexport default BlogPost\n"],"names":["_ref","_data$site","_data$site$siteMetada","title","description","lang","pathname","data","useStaticQuery","siteTitle","site","siteMetadata","siteUrl","process","SITE_URL","fullTitle","url","URL","href","e","React","name","content","property","enTranslations","require","zhTranslations","_pageContext$i18n","pageContext","t","i18n","useTranslation","effectiveLang","language","raw","en","zh","translate","key","opts","res","Object","assign","lng","tFallback","v","keys","reduce","s","k","replace","RegExp","String","md","markdownRemark","frontmatter","html","date","dateSource","d","Date","Intl","DateTimeFormat","year","month","day","format","Layout","SeoHead","excerpt","undefined","className","dangerouslySetInnerHTML","__html","previous","Link","to","path","toLocaleDateString","next"],"sourceRoot":""}
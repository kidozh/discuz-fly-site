{"version":3,"file":"component---src-pages-about-tsx-fba2c329779bb893a73e.js","mappings":"+IAsDA,IA5CiCA,IAAyD,IAADC,EAAAC,EAAA,IAAvD,MAAEC,EAAK,YAAEC,EAAc,GAAE,KAAEC,EAAO,KAAI,SAAEC,GAAUN,EAClF,MAAMO,GAAOC,EAAAA,EAAAA,gBAAe,cAUtBC,GAAYF,SAAU,QAANN,EAAJM,EAAMG,YAAI,IAAAT,GAAc,QAAdC,EAAVD,EAAYU,oBAAY,IAAAT,OAApB,EAAJA,EAA0BC,QAAS,GAC/CS,EAAUC,CAAAA,EAAYC,UAAY,GAClCC,EAAYZ,EAAWA,EAAK,MAAMM,EAAcA,EACtD,IAAIO,EAAM,GACV,IAGMA,EAFAV,EACEM,EACI,IAAIK,IAAIX,EAAUM,GAASM,KAG3BZ,EAGFM,GAAW,EAErB,CAAE,MAAOO,GACPH,EAAMV,GAAYM,GAAW,EAC/B,CAEA,OACEQ,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,QAAMf,KAAMA,IACZe,EAAAA,cAAA,aAAQL,GACRK,EAAAA,cAAA,QAAMC,KAAK,cAAcC,QAASlB,IAClCgB,EAAAA,cAAA,QAAMG,SAAS,WAAWD,QAASP,IACnCK,EAAAA,cAAA,QAAMG,SAAS,iBAAiBD,QAASlB,IACzCgB,EAAAA,cAAA,QAAMG,SAAS,UAAUD,QAAQ,YACjCF,EAAAA,cAAA,QAAMG,SAAS,SAASD,QAASN,IACjCI,EAAAA,cAAA,QAAMC,KAAK,eAAeC,QAAQ,a,6GCVxC,UAjCuCE,KACrC,MAAM,EAAEC,IAAMC,EAAAA,EAAAA,kBAEd,OACEN,EAAAA,cAACO,EAAAA,EAAM,KACHP,EAAAA,cAAA,QAAMQ,UAAU,gEAClBR,EAAAA,cAAA,OAAKQ,UAAU,QACfR,EAAAA,cAAA,OAAKQ,UAAU,0CACbR,EAAAA,cAAA,MAAIQ,UAAU,+BAA+BH,EAAE,gBAC/CL,EAAAA,cAAA,KAAGQ,UAAU,QAAQH,EAAE,4BACvBL,EAAAA,cAAA,KAAGQ,UAAU,QAAQH,EAAE,sBAAsB,KAC7CL,EAAAA,cAAA,KAAGQ,UAAU,QACXR,EAAAA,cAAA,KAAGF,KAAK,2CAA2CU,UAAU,uCAAuCC,OAAO,SAASC,IAAI,uBAAsB,6CAIhJV,EAAAA,cAAA,MAAIQ,UAAU,4BAA4BH,EAAE,0BAC5CL,EAAAA,cAAA,MAAIQ,UAAU,uBACZR,EAAAA,cAAA,UAAKK,EAAE,4BAETL,EAAAA,cAAA,KAAGQ,UAAU,sBAAsBH,EAAE,oBAAqB,0FAE1DL,EAAAA,cAAA,OAAKQ,UAAU,sBACbR,EAAAA,cAAA,MAAIQ,UAAU,4BAA4BH,EAAE,wBAC5CL,EAAAA,cAAA,KAAGQ,UAAU,8BAA8BH,EAAE,6BAA6B,KAAEL,EAAAA,cAAA,KAAGQ,UAAU,yCAAyCV,KAAK,2BAA0B,0BAWpK,MAAMa,EAAeA,KAC1B,MAAM,EAAEN,IAAMC,EAAAA,EAAAA,kBACd,OAAON,EAAAA,cAACY,EAAAA,EAAO,CAAC7B,MAAO8B,OAAOR,EAAE,oBAAqBrB,YAAa6B,OAAOR,EAAE,4B","sources":["webpack://discuz-fly-site/./src/components/SeoHead.tsx","webpack://discuz-fly-site/./src/pages/about.tsx"],"sourcesContent":["import * as React from 'react'\nimport { useStaticQuery, graphql } from 'gatsby'\n\ntype Props = {\n  title?: string\n  description?: string\n  lang?: string\n  pathname?: string\n}\n\nconst SeoHead: React.FC<Props> = ({ title, description = '', lang = 'en', pathname }) => {\n  const data = useStaticQuery(graphql`\n    query SiteMetaForHead {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  const siteTitle = data?.site?.siteMetadata?.title || ''\n  const siteUrl = process.env.SITE_URL || ''\n  const fullTitle = title ? `${title} | ${siteTitle}` : siteTitle\n  let url = ''\n  try {\n    if (pathname) {\n      if (siteUrl) {\n        url = new URL(pathname, siteUrl).href\n      } else {\n        // fallback to using pathname as-is when no siteUrl is configured\n        url = pathname\n      }\n    } else {\n      url = siteUrl || ''\n    }\n  } catch (e) {\n    url = pathname || siteUrl || ''\n  }\n\n  return (\n    <>\n      <html lang={lang} />\n      <title>{fullTitle}</title>\n      <meta name=\"description\" content={description} />\n      <meta property=\"og:title\" content={fullTitle} />\n      <meta property=\"og:description\" content={description} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta property=\"og:url\" content={url} />\n      <meta name=\"twitter:card\" content=\"summary\" />\n    </>\n  )\n}\n\nexport default SeoHead\n","import * as React from 'react'\nimport { graphql, type HeadFC, type PageProps } from 'gatsby'\nimport { useTranslation } from 'gatsby-plugin-react-i18next'\nimport Layout from '../components/Layout'\nimport SeoHead from '../components/SeoHead'\n\nconst AboutPage: React.FC<PageProps> = () => {\n  const { t } = useTranslation()\n\n  return (\n    <Layout>\n        <main className=\"min-h-screen font-sans bg-theme text-theme transition-colors\">\n      <div className=\"h-3\" />\n      <div className=\"max-w-3xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <h1 className=\"text-3xl font-semibold mb-6\">{t('about_title')}</h1>\n        <p className=\"mb-4\">{t('about_team_intro_single')}</p>\n        <p className=\"mb-4\">{t('about_github_label')}ï¼š</p>\n        <p className=\"mb-6\">\n          <a href=\"https://github.com/kidozh/discuz_flutter\" className=\"text-brand font-bold hover:underline\" target=\"_blank\" rel=\"noopener noreferrer\">\n            https://github.com/kidozh/discuz_flutter\n          </a>\n        </p>\n        <h2 className=\"text-xl font-medium mb-3\">{t('about_members_heading')}</h2>\n        <ul className=\"list-disc pl-5 mb-6\">\n          <li>{t('about_single_developer')}</li>\n        </ul>\n        <p className=\"text-sm text-muted\">{t('contribute_prompt', 'If you would like to contribute, please open an issue or PR on the GitHub repository.')}</p>\n        \n        <div className=\"mt-8 border-t pt-6\">\n          <h2 className=\"text-xl font-medium mb-3\">{t('about_contact_title')}</h2>\n          <p className=\"mb-1 text-sm text-gray-600\">{t('about_contact_email_label')}: <a className=\"text-brand font-medium hover:underline\" href=\"mailto:kidozh@gmail.com\">kidozh@gmail.com</a></p>\n        </div>\n      </div>\n    </main>\n    </Layout>\n    \n  )\n}\n\nexport default AboutPage\n\nexport const Head: HeadFC = () => {\n  const { t } = useTranslation()\n  return <SeoHead title={String(t('about_seo_title'))} description={String(t('about_seo_description'))} />\n}\n\nexport const query = graphql`\n  query ($language: String!) {\n    locales: allLocale(filter: {language: {eq: $language}}) {\n      edges {\n        node {\n          ns\n          data\n          language\n        }\n      }\n    }\n  }\n`;\n"],"names":["_ref","_data$site","_data$site$siteMetada","title","description","lang","pathname","data","useStaticQuery","siteTitle","site","siteMetadata","siteUrl","process","SITE_URL","fullTitle","url","URL","href","e","React","name","content","property","AboutPage","t","useTranslation","Layout","className","target","rel","Head","SeoHead","String"],"sourceRoot":""}
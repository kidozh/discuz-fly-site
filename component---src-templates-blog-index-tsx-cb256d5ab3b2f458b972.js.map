{"version":3,"file":"component---src-templates-blog-index-tsx-cb256d5ab3b2f458b972.js","mappings":"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","sources":["webpack://discuz-fly-site/./src/templates/BlogIndex.tsx"],"sourcesContent":["import React, { useMemo, useState, useEffect } from 'react'\nimport { useTranslation } from 'gatsby-plugin-react-i18next'\nconst enTranslations = require('../locales/en/translation.json')\nconst zhTranslations = require('../locales/zh/translation.json')\nimport Layout from '../components/Layout'\nimport { Link, navigate } from 'gatsby'\n\nconst PAGE_SIZE = 5\n\nconst BlogIndex: React.FC<any> = ({ pageContext }) => {\n  const rawPosts = pageContext?.posts || []\n\n  // Normalize posts and parse dates\n  const posts = useMemo(() => {\n    return rawPosts.map((p: any) => {\n      const fm = p.frontmatter || {}\n      const title = fm.title || p.relativePath\n      const slug = (fm.slug || p.relativePath || '').replace(/\\.md$|\\.markdown$/i, '').replace(/^\\/+|\\/+$/g, '')\n      const date = fm.date ? new Date(fm.date) : null\n      const excerpt = fm.excerpt || ''\n      const tags = Array.isArray(fm.tags) ? fm.tags.map(String) : []\n      return { id: p.id || slug, title, slug, date, excerpt, tags }\n    }).sort((a: any, b: any) => {\n      // newest first; null dates go last\n      if (!a.date && !b.date) return 0\n      if (!a.date) return 1\n      if (!b.date) return -1\n      return b.date.getTime() - a.date.getTime()\n    })\n  }, [rawPosts])\n\n  const { t, i18n } = useTranslation()\n  const effectiveLang = pageContext?.i18n?.language || (i18n && i18n.language) || 'en'\n  const defaultLang = pageContext?.i18n?.defaultLanguage || 'en'\n  const langPrefix = effectiveLang && effectiveLang !== defaultLang ? `/${effectiveLang}` : ''\n  const raw = { en: enTranslations, zh: zhTranslations }\n  const tFallback = (key: string, opts?: any) => {\n    const v = raw[effectiveLang as 'en' | 'zh'] && raw[effectiveLang as 'en' | 'zh'][key]\n    if (v && typeof v === 'string') {\n      if (opts) {\n        return Object.keys(opts).reduce((s, k) => s.replace(new RegExp(`{{\\\\s*${k}\\\\s*}}`, 'g'), String(opts[k])), v)\n      }\n      return v\n    }\n    return key\n  }\n  const translate = (key: string, opts?: any) => {\n    try {\n      if (i18n && i18n.language) {\n        const res = t(key, { lng: effectiveLang, ...(opts || {}) })\n        if (typeof res === 'string' && res !== key) return res\n      }\n    } catch (e) {}\n    return tFallback(key, opts)\n  }\n\n  const allTags = useMemo(() => {\n    const s = new Set<string>()\n    posts.forEach((p: any) => p.tags.forEach((t: string) => s.add(t)))\n    return Array.from(s).sort()\n  }, [posts])\n\n  // Support reading selectedTag from pageContext (tag pages) and from URL query\n  const initialTag = pageContext?.selectedTag || null\n  const [selectedTag, setSelectedTag] = useState<string | null>(initialTag)\n\n  // page state synchronized with ?page=<n> and can be seeded from pageContext (SSR)\n  const getPageFromUrl = () => {\n    try {\n      const qp = new URLSearchParams(typeof window !== 'undefined' ? window.location.search : '')\n      const p = parseInt(qp.get('page') || String(pageContext?.currentPage || '1'), 10)\n      return Number.isFinite(p) && p > 0 ? p : 1\n    } catch (e) { return Number(pageContext?.currentPage || 1) }\n  }\n  const [page, setPage] = useState(Number(pageContext?.currentPage || getPageFromUrl()))\n\n  // keep URL in sync when page or tag changes\n      useEffect(() => {\n    try {\n      const url = new URL(window.location.href)\n      if (selectedTag) {\n        url.pathname = `${langPrefix}/blog/tag/${String(selectedTag).toLowerCase().replace(/[^a-z0-9]+/g, '-')}/`\n      } else {\n        url.pathname = `${langPrefix}/blog/`\n      }\n      if (page && page > 1) url.searchParams.set('page', String(page))\n      else url.searchParams.delete('page')\n      window.history.replaceState({}, '', url.toString())\n    } catch (e) {}\n  }, [selectedTag, page])\n\n  const filtered = useMemo(() => {\n    const f = selectedTag ? posts.filter((p: any) => p.tags.includes(selectedTag)) : posts\n    return f\n  }, [posts, selectedTag])\n\n  const totalPages = Math.max(1, Math.ceil(filtered.length / PAGE_SIZE))\n  const current = Math.min(Math.max(1, page), totalPages)\n  const start = (current - 1) * PAGE_SIZE\n  const paged = filtered.slice(start, start + PAGE_SIZE)\n\n  function gotoPage(n: number) {\n    const next = Math.max(1, Math.min(totalPages, n))\n    setPage(next)\n    window.scrollTo({ top: 0, behavior: 'smooth' })\n  }\n\n  const fmtDate = (d: Date | null) => {\n    if (!d) return null\n    try {\n      return new Intl.DateTimeFormat(i18n.language || 'en', { year: 'numeric', month: '2-digit', day: '2-digit' }).format(d)\n    } catch (e) {\n      return d.toISOString().slice(0,10)\n    }\n  }\n\n  return (\n    <Layout>\n      <main className=\"max-w-4xl mx-auto py-12 px-4\">\n  <h1 className=\"text-3xl font-bold mb-6\">{String(translate('blog.title') || 'Blog')}</h1>\n\n        <div className=\"mb-6\">\n          <div className=\"flex items-center space-x-3 flex-wrap\">\n            <button\n              onClick={() => { setSelectedTag(null); setPage(1) }}\n              className={`px-3 py-1 rounded ${selectedTag === null ? 'bg-brand text-white' : 'bg-gray-100 text-gray-800 hover:bg-gray-200'}`}>\n              {String(translate('blog.all', { count: posts.length }))}\n            </button>\n            {allTags.map((t) => (\n              <button\n                key={t}\n                onClick={() => { setSelectedTag(t); setPage(1) }}\n                className={`px-3 py-1 rounded ${selectedTag === t ? 'bg-brand text-white' : 'bg-gray-100 text-gray-800 hover:bg-gray-200'}`}>\n                {t}\n              </button>\n            ))}\n          </div>\n        </div>\n\n  <div className=\"mb-4 text-sm text-gray-600\">{String(translate('blog.count', { count: filtered.length }))} — {String(translate('blog.page_of', { current, total: totalPages }))}</div>\n\n        <ul className=\"space-y-6\">\n          {paged.map((p: any) => (\n            <li\n              key={p.id}\n              role=\"link\"\n              tabIndex={0}\n              onClick={() => navigate(`${langPrefix}/blog/${p.slug}/`)}\n              onKeyDown={(e) => {\n                if (e.key === 'Enter' || e.key === ' ') {\n                  e.preventDefault()\n                  navigate(`${langPrefix}/blog/${p.slug}/`)\n                }\n              }}\n              className=\"border rounded p-4 cursor-pointer transition-transform transform hover:-translate-y-1 hover:shadow-lg focus:outline-none focus:ring-2 focus:ring-brand\"\n            >\n              <h2 className=\"text-xl font-semibold mb-1\">\n                <Link to={`${langPrefix}/blog/${p.slug}/`} className=\"text-brand\">{p.title}</Link>\n              </h2>\n              {p.date ? <div className=\"text-sm text-gray-500 mb-2\">{fmtDate(p.date)}</div> : null}\n              {p.excerpt ? <p className=\"text-sm text-gray-700 mb-2\">{p.excerpt}</p> : null}\n              {p.tags && p.tags.length ? (\n                <div className=\"flex flex-wrap gap-2\">\n                  {p.tags.map((t: string) => (\n                    <button\n                      key={t}\n                      onClick={(e) => { e.stopPropagation(); setSelectedTag(t); setPage(1) }}\n                      className=\"text-sm px-2 py-1 bg-gray-100 rounded\"\n                    >\n                      {t}\n                    </button>\n                  ))}\n                </div>\n              ) : null}\n            </li>\n          ))}\n        </ul>\n\n        <div className=\"mt-6 flex items-center justify-between\">\n          <div>\n            <button onClick={() => gotoPage(page - 1)} disabled={page <= 1} className=\"px-3 py-1 rounded bg-gray-100 hover:bg-gray-200 disabled:opacity-50\">{String(translate('blog.previous') || 'Previous')}</button>\n            <button onClick={() => gotoPage(page + 1)} disabled={page >= totalPages} className=\"ml-2 px-3 py-1 rounded bg-gray-100 hover:bg-gray-200 disabled:opacity-50\">{String(translate('blog.next') || 'Next')}</button>\n          </div>\n          <div className=\"text-sm text-gray-600\">{String(translate('blog.showing_range', { start: start + 1, end: Math.min(start + PAGE_SIZE, filtered.length), total: filtered.length }))}</div>\n        </div>\n      </main>\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n"],"names":["enTranslations","require","zhTranslations","_ref","_pageContext$i18n","_pageContext$i18n2","pageContext","rawPosts","posts","useMemo","map","p","fm","frontmatter","title","relativePath","slug","replace","date","Date","excerpt","tags","Array","isArray","String","id","sort","a","b","getTime","t","i18n","useTranslation","effectiveLang","language","defaultLang","defaultLanguage","langPrefix","raw","en","zh","translate","key","opts","res","Object","assign","lng","e","tFallback","v","keys","reduce","s","k","RegExp","allTags","Set","forEach","add","from","initialTag","selectedTag","setSelectedTag","useState","page","setPage","Number","currentPage","getPageFromUrl","qp","URLSearchParams","window","location","search","parseInt","get","isFinite","useEffect","url","URL","href","pathname","toLowerCase","searchParams","set","delete","history","replaceState","toString","filtered","filter","includes","totalPages","Math","max","ceil","length","current","min","start","paged","slice","gotoPage","n","next","scrollTo","top","behavior","React","Layout","className","onClick","count","total","role","tabIndex","navigate","onKeyDown","preventDefault","Link","to","d","Intl","DateTimeFormat","year","month","day","format","toISOString","fmtDate","stopPropagation","disabled","end"],"sourceRoot":""}
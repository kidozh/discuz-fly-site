{"version":3,"file":"component---src-templates-tags-index-tsx-5f8ddbd5699ef2e21503.js","mappings":"kLAEA,MAAMA,EAAiBC,EAAQ,MACzBC,EAAiBD,EAAQ,MAkE/B,UA9DkCE,IAAU,IAAAC,EAAAC,EAC1C,MAAM,YAAEC,GAAgBH,GAClB,EAAEI,EAAC,KAAEC,IAASC,EAAAA,EAAAA,kBACdC,GAAgBJ,SAAiB,QAANF,EAAXE,EAAaE,YAAI,IAAAJ,OAAN,EAAXA,EAAmBO,WAAaH,GAAQA,EAAKG,UAAa,KAC1EC,GAAcN,SAAiB,QAAND,EAAXC,EAAaE,YAAI,IAAAH,OAAN,EAAXA,EAAmBQ,kBAAmB,KACpDC,EAAaJ,GAAiBA,IAAkBE,EAAc,IAAIF,EAAkB,GACpFK,EAAM,CAAEC,GAAIhB,EAAgBiB,GAAIf,GAMhCgB,EAAaC,IACjB,IACE,GAAIX,GAAQA,EAAKG,SAAU,CACzB,MAAMS,EAAMb,EAAEY,EAAK,CAAEE,IAAKX,IAC1B,GAAmB,iBAARU,GAAoBA,IAAQD,EAAK,OAAOC,CACrD,CACF,CAAE,MAAOE,GAAI,CACb,MAZgBC,CAACJ,IACjB,MAAMK,EAAIT,EAAIL,IAAiCK,EAAIL,GAA8BS,GACjF,OAAIK,GAAkB,iBAANA,EAAuBA,EAChCL,GASAI,CAAUJ,IAGbM,GAAkDnB,aAAW,EAAXA,EAAaoB,OAAQ,IACvE,EAACC,EAAK,EAAEC,IAAYC,EAAAA,EAAAA,UAAS,KAC7B,EAACC,EAAM,EAAEC,IAAaF,EAAAA,EAAAA,UAA0B,SAEhDG,GAAWC,EAAAA,EAAAA,SAAQ,KACvB,MAAMC,EAAIC,OAAOR,GAAS,IAAIS,OAAOC,cACrC,OAAOZ,EAASa,OAAQ/B,GAAMA,EAAEgC,IAAIF,cAAcG,SAASN,IAAIO,KAAK,CAACC,EAAGC,IACvD,UAAXb,GAA2Ba,EAAEC,MAAQF,EAAEE,OACpCF,EAAEH,IAAIM,cAAcF,EAAEJ,OAE9B,CAACd,EAAUE,EAAOG,IAErB,OACEgB,EAAAA,cAACC,EAAAA,EAAM,CAACC,UAAW7C,GACjB2C,EAAAA,cAAA,QAAMG,UAAU,gCACdH,EAAAA,cAAA,MAAIG,UAAU,2BAA2Bd,OAAOjB,EAAU,eAAiB,QAAQ,WACnF4B,EAAAA,cAAA,OAAKG,UAAU,gCACbH,EAAAA,cAAA,SAAOI,MAAOvB,EAAOwB,SAAW7B,GAAMM,EAASN,EAAE8B,OAAOF,OAAQG,YAAalB,OAAOjB,EAAU,4BAA8B,eAAgB+B,UAAU,oCACtJH,EAAAA,cAAA,UAAQI,MAAOpB,EAAQqB,SAAW7B,GAAMS,EAAUT,EAAE8B,OAAOF,OAAeD,UAAU,4BAClFH,EAAAA,cAAA,UAAQI,MAAM,SAAQ,iBACtBJ,EAAAA,cAAA,UAAQI,MAAM,SAAQ,kBAI1BJ,EAAAA,cAAA,OAAKG,UAAU,yCACZjB,EAASsB,IAAIC,IAAoB,IAAnB,IAAEhB,EAAG,MAAEK,GAAOW,EAC3B,MAAMC,EAAOrB,OAAOI,GAAKF,cAAcoB,QAAQ,cAAe,KAAKA,QAAQ,WAAY,IACvF,OACEX,EAAAA,cAACY,EAAAA,KAAI,CAACvC,IAAKoB,EAAKoB,GAAO7C,EAAU,aAAa0C,EAAI,IAAKP,UAAU,mFAC/DH,EAAAA,cAAA,YAAOP,GACPO,EAAAA,cAAA,QAAMG,UAAU,yBAAyBL,S","sources":["webpack://discuz-fly-site/./src/templates/TagsIndex.tsx"],"sourcesContent":["import React, { useMemo, useState } from 'react'\nimport { useTranslation } from 'gatsby-plugin-react-i18next'\nconst enTranslations = require('../locales/en/translation.json')\nconst zhTranslations = require('../locales/zh/translation.json')\nimport Layout from '../components/Layout'\nimport { Link } from 'gatsby'\n\nconst TagsIndex: React.FC<any> = (props) => {\n  const { pageContext } = props\n  const { t, i18n } = useTranslation()\n  const effectiveLang = pageContext?.i18n?.language || (i18n && i18n.language) || 'en'\n  const defaultLang = pageContext?.i18n?.defaultLanguage || 'en'\n  const langPrefix = effectiveLang && effectiveLang !== defaultLang ? `/${effectiveLang}` : ''\n  const raw = { en: enTranslations, zh: zhTranslations }\n  const tFallback = (key: string, opts?: any) => {\n    const v = raw[effectiveLang as 'en' | 'zh'] && raw[effectiveLang as 'en' | 'zh'][key]\n    if (v && typeof v === 'string') return v\n    return key\n  }\n  const translate = (key: string) => {\n    try {\n      if (i18n && i18n.language) {\n        const res = t(key, { lng: effectiveLang })\n        if (typeof res === 'string' && res !== key) return res\n      }\n    } catch (e) {}\n    return tFallback(key)\n  }\n\n  const tagsData: Array<{ tag: string; count: number }> = pageContext?.tags || []\n  const [query, setQuery] = useState('')\n  const [sortBy, setSortBy] = useState<'count'|'alpha'>('count')\n\n  const filtered = useMemo(() => {\n    const q = String(query || '').trim().toLowerCase()\n    return tagsData.filter((t) => t.tag.toLowerCase().includes(q)).sort((a, b) => {\n      if (sortBy === 'count') return b.count - a.count || a.tag.localeCompare(b.tag)\n      return a.tag.localeCompare(b.tag)\n    })\n  }, [tagsData, query, sortBy])\n\n  return (\n    <Layout pageProps={props}>\n      <main className=\"max-w-4xl mx-auto py-12 px-4\">\n        <h1 className=\"text-3xl font-bold mb-6\">{String(translate('blog.title') || 'Blog')} â€” Tags</h1>\n        <div className=\"mb-4 flex items-center gap-4\">\n          <input value={query} onChange={(e) => setQuery(e.target.value)} placeholder={String(translate('blog.search_placeholder') || 'Search tags')} className=\"flex-1 px-3 py-2 border rounded\" />\n          <select value={sortBy} onChange={(e) => setSortBy(e.target.value as any)} className=\"px-2 py-2 border rounded\">\n            <option value=\"count\">Sort by count</option>\n            <option value=\"alpha\">Sort by name</option>\n          </select>\n        </div>\n\n        <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-4\">\n          {filtered.map(({ tag, count }) => {\n            const slug = String(tag).toLowerCase().replace(/[^a-z0-9]+/g, '-').replace(/(^-|-$)/g, '')\n            return (\n              <Link key={tag} to={`${langPrefix}/blog/tag/${slug}/`} className=\"flex justify-between items-center p-4 border rounded hover:shadow-md transition\">\n                <span>{tag}</span>\n                <span className=\"text-sm text-gray-500\">{count}</span>\n              </Link>\n            )\n          })}\n        </div>\n      </main>\n    </Layout>\n  )\n}\n\nexport default TagsIndex\n"],"names":["enTranslations","require","zhTranslations","props","_pageContext$i18n","_pageContext$i18n2","pageContext","t","i18n","useTranslation","effectiveLang","language","defaultLang","defaultLanguage","langPrefix","raw","en","zh","translate","key","res","lng","e","tFallback","v","tagsData","tags","query","setQuery","useState","sortBy","setSortBy","filtered","useMemo","q","String","trim","toLowerCase","filter","tag","includes","sort","a","b","count","localeCompare","React","Layout","pageProps","className","value","onChange","target","placeholder","map","_ref","slug","replace","Link","to"],"sourceRoot":""}